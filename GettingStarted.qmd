---
title: "Getting Started"
---

## How do I start using GitHub?

### 1) Install [Git](https://git-scm.com/downloads) for your operating system.

It is easiest to use the default installation directory; however, if you want to the change the installation location, make note of the new directory because you will need to direction Rstudio, GitHub Desktop or other programs to that location. More on this below...

### 2) Direct RStudio to Git to enable version control

Git/SVN is found in the Global Options under "Tools"

![](images/GlobalOptions_RStudio.png){fig-align="center"}

### 3) Create a GitHub account

![](images/GitHub_Registration.png){fig-align="center"}

### 4) Choose a GUI client.

Although Git comes with a GUI (specifically, GitGUI), there are countless other GUI's available, that each boast various utilities and add-ins may cater to different needs.

We will cover [GitHub Desktop](https://desktop.github.com/) in this tutorial, since it is relatively simple and is directly offered by GitHub

![](images/GitHubDesktop.png){fig-align="center"}

### 5) Create a new, version controlled Rstudio project

![](images/NewProject_1.png){fig-align="center"}

![Be sure that 'create a git repository' is checked](images/NewProject_2.png){style="text-align: center" fig-align="center"}

### ...or enable version control for an existing Rstudio project.

Once version control has been enabled in the Global Options, you can it on for any pre-existing R Project in the Project Options.

![](images/ExistingProject_1.png){fig-align="center"}

### 6) Add your local repository to GitHub Desktop

![](images/GitHubDesktop_Add_1.png){fig-align="center"}

![](images/GitHubDesktop_Add_2.png){fig-align="center"}

![If you select a folder that does not contain a version-controlled .Rproj file, GitHub desktop will display an error](images/GitHubDesktop_Add_3.png){style="text-align: center" fig-align="center"}

### 7) Publish your initial repository and any relevant files/code

![](images/GitHubDesktop_Publish_1.png)

![Provide a 'summary' (required), and any additional notes you may want to include about the commit.](images/GitHubDesktop_Publish_2.png){style="text-align: center" fig-align="center"}

![You can change the name of your repository, provide a description, indicate whether this should be made publicly available on GitHub for other users to view, and indicate whether this repo is personal, or belongs to a GitHub organization.](images/GitHubDesktop_Publish_3.png){style="text-align: center" fig-align="center"}

### GitHub will now detect and display any changes to the relevant files

![Once you finish making changes, you will need to 'commit' and 'push' those changes to GitHub, where they then become part of that file's history.](images/GitHubDesktop_Changes_1.png){style="text-align: center" fig-align="center"}

### You can then review the history of committed changes

![In the history, you can revert or reject any previous commits either as a whole or for specific lines.](images/GitHubDesktop_History_1.png){style="text-align: center" fig-align="center"}

## Rinse, Repeat, Win!!!
